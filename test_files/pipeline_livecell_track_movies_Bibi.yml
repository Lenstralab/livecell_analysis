### Parameters for pipeline_livecell_track_movies.py script

#########################################################################################################
#########################################################################################################

#### specify input and output folder
#  -folderIn: Full path on input folder with raw data, containing experiments you want to analyze. Example: "/DATA/lenstra_lab/XXXX/livecell_data/20200219/".
#  -expList: List of specific experiment folder in the folderIn you want to analyze. Example: ["20200120/YTL870B1_galinduction_1", "20200120/YTL870B1_galinduction_2"].
#  -outputfolder: full path of folder where analyzed data should be written. Example: "/DATA/lenstra_lab/XXXX/LiveCell_analysis/"

folderIn: "/DATA/lenstra_lab/shared/livecell_testdata/Bibi/2020-03-11/"
expList: ["Wapl-AID_C46_13_tagRFPt_MCP_well1_video1_1/"]
outputfolder: "/DATA/lenstra_lab/w.pomp/test/out"

RegisterChannels: 0
CorrectDrift: [0]

#### specify which part of the code you want to run
#  -MaxProj: 0 or 1. note: If manually made with FIJI, order or channels may be different and the number of timeframes may not be read correctly in python
#  -CellMask: 0 or 1. Makes cell mask. For 2 color data, uses green (2nd) channel
#  -OptimizeThreshold: 0 or 1. Create graphs with different thresholds (4-13) of nr of detected spots and nr of cells with spots
#  -RunLocalize: 0 or 1. To find the localization spots (needs max.tif and sum_cells_mask.tif or TSregfiles(see below) either by functions above or by manual selection of ROIs)
#  -CalculateBackground: 0 or 1. Calculate background at 4 positions at fixed distance (5 pixels in x and y) from TS. 
#  -WriteFiles: 0 or 1. Writes files (metadatahead, list.py and pdfs of tracks)
#  -WriteMovies: 0 or 1. Creates a movie of the found spots
#  -ComputeCorrelFunc: 0 or 1. Performs auto and cross correlation. For better results use pipeline_livecell_correlationfunctions
#  -RegisterChannels: 0 or 1. Experimental. Corrects for aberrations between channels. A file (name starting with 'beads') with a z-stack with beads should be in pathIn.

MaxProj: 1
CellMask: 1
OptimizeThreshold: 1
RunLocalize: 1
CalculateBackground: 1
WriteFiles: 1
WriteMovies: 1
ComputeCorrelFunc: 1
RegisterChannels: 0

#### specify general analysis paramaters
#  -ChannelsToAnalyze: Provide list of channels to analyze: [0] = red channel, [1] is green channel, [0,1] is red and geen. For 1-color data: [0]
#  -swapColors: if 0, the script assumes channel 1 is red and channel 2 is green. If this is reversed, set swapColors to 1.
#  -fillIn: 0 or 1: fills in/determines intensity of spot at TS location in other channel.
#  -fillInRadius: Radius around TS  to search for spots in fillInColors. If exact location, use radius 0. Only used in fillIn = 1
#  -fillInColors: Which color to fill in, only used if fillIn = 1
    # -"red": tracks green channel and uses green TS location to determine intensity in red channel.
    # -"green": tracks red channel and uses red TS location to determine intensity in green channel

ChannelsToAnalyze: [0]
swapColors: 0
fillIn: 0
fillInRadius: 0
fillInColors: "red"

#### parameters for max projection,  and metadata:
#  -zSlices: nr z slices. Example: 9
#  -frames: nr timeframes. Exaple: 240
#  -microscope: choose "spinningDisk" or "AxioObserver"
#  -timeInterval: time inteval between frame in seconds. Only used for spinningDisk

zSlices: 13
frames: 12
microscope: "AxioObserver"
timeInterval: 10

#### parameters for findCells:
#  -findCellsCCdist: distance between cells, example for yeast: 25, example for mammalian cells: 100

findCellsCCdist: 100

#### Localize parameters
#  The script finds spots in 2 steps with high and low thesholds. First it will find the most intense spots using the "thresholdSD" threshold. Second, it will find spots with a lower threshold ("thresholdSD"-"diffThresholdSD") in the vicinity of high intensity spots (with distance threshold "dist"). Lastly, it will fill in frames that don't have spot about both thresholds by using the xy location of the first burst or the previous burst.

#  -thresholdSD_Red:  Threshold in number of standard deviations for high threshold red. Fill in this one for 1 color analysis. Example: 7
#  -thresholdSD_Green: Threshold in number of standard deviations for high threshold in green. Example: 7
#  -diffThresholdSD: difference high - low threshold. Example: 2
#  -writeLocTifFiles: set to 1 if you want to write movies of all the spots found for the low and high threshold. It may crash if you have many timeframes.

thresholdSD_Red: 7
thresholdSD_Green: 9
diffThresholdSD: 3
writeLocTifFiles: 1

#### Fitting parameters for PSF
#  -psfPx: PSF width in pixels. Example: 2.
#  -maxDist: Maximal distance tolerated between guess and fit (in PSF width). Example: 3.
#  -minSeparation: Minimal distance tolerated between two spots (in PSF width). Example: .1
#  -dist: maximal distance in pixels tolerated between previous spot (from higher threshold) and spot found with lower threshold. Example: 5
#  -winSize: window size in pixels used for fitting PSF. Example: 5

psfPx: 2.
maxDist: 3.
minSeparation: .1
dist: 5
winSize: 5

#### variable masking parameters
#   It is possible to prelocate TS with FIJI (macro_tracking.ijm), to make it easier to find the the TS. The script will then only search in the radius of the spots.

#  -TSregfile: List or names of prelocated TS files located in the folder of the maxprojection. You can also load trk_result files. Example: ['2019-11-28_16_U2OS_40x_LS_GFP_mCherry_1_max_Merge_ROI_Cell1', '2019-11-28_16_U2OS_40x_LS_GFP_mCherry_1_max_Merge_ROI_Cell2'] or [].
#  -TSregRadius: number of pixels in which to find TS around prelocated TS file.

TSregfile: []
TSregRadius: 10

#### movie parameters
#  -sideViews: 0 = no sideview, = 1 sideViews in the movies

sideViews: 1
